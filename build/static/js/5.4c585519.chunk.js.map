{"version":3,"sources":["components/comments/Comments.module.css","components/comments/NewCommentForm.module.css","components/quotes/HighlightedQuote.module.css","components/comments/NewCommentForm.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js"],"names":["module","exports","NewCommentForm","props","commentTextRef","useRef","submitFormHandler","event","preventDefault","className","classes","form","onSubmit","control","htmlFor","id","rows","ref","actions","Comments","useState","isAddingComment","setIsAddingComment","comments","onClick","HighlightedQuote","quote","text","author","QuoteDetail","match","useRouteMatch","quoteId","useParams","useHttp","getSingleQuote","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","path","exact","to","url"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,SAAW,6B,mBCA7BD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,QAAU,gCAAgC,QAAU,gCAAgC,QAAU,kC,mBCApJD,EAAOC,QAAU,CAAC,MAAQ,kC,iHC2BXC,EAxBQ,SAACC,GACtB,IAAMC,EAAiBC,mBAEjBC,EAAoB,SAACC,GACzBA,EAAMC,kBAOR,OACE,uBAAMC,UAAWC,IAAQC,KAAMC,SAAUN,EAAzC,UACE,sBAAKG,UAAWC,IAAQG,QAASD,SAAUN,EAA3C,UACE,uBAAOQ,QAAQ,UAAf,0BACA,0BAAUC,GAAG,UAAUC,KAAK,IAAIC,IAAKb,OAEvC,qBAAKK,UAAWC,IAAQQ,QAAxB,SACE,wBAAQT,UAAU,MAAlB,+BCIOU,EArBE,WACf,MAA8CC,oBAAS,GAAvD,mBAAOC,EAAP,KAAwBC,EAAxB,KAMA,OACE,0BAASb,UAAWC,IAAQa,SAA5B,UACE,gDACEF,GACA,wBAAQZ,UAAU,MAAMe,QARC,WAC7BF,GAAmB,IAOf,2BAIDD,GAAmB,cAAC,EAAD,IACpB,gD,iBCVSI,EATU,SAACtB,GACxB,OACE,yBAAQM,UAAWC,IAAQgB,MAA3B,UACE,4BAAIvB,EAAMwB,OACV,qCAAaxB,EAAMyB,a,wBCgDVC,UA9Cf,WAEE,IAAMC,EAAQC,cAEPC,EADQC,cACRD,QAEP,EAAwDE,YAAQC,KAAe,GAAvEC,EAAR,EAAQA,YAAYC,EAApB,EAAoBA,OAAYC,EAAhC,EAA2BC,KAAoBC,EAA/C,EAA+CA,MAM/C,OAJAC,qBAAU,WACRL,EAAYJ,KACZ,CAACI,EAAcJ,IAEL,YAATK,EAEC,qBAAK5B,UAAU,WAAf,SACK,cAACiC,EAAA,EAAD,MAKNF,EACM,oBAAG/B,UAAU,mBAAb,cAAkC+B,KAGvCF,EAAaX,KAKf,gCACQ,cAAC,EAAD,CAAkBA,KAAMW,EAAaX,KAAMC,OAAQU,EAAaV,SAChE,cAAC,IAAD,CAAOe,KAAI,UAAKb,EAAMa,KAAX,KAAoBC,OAAK,EAApC,SACE,qBAAKnC,UAAU,WAAf,SACE,cAAC,IAAD,CAAMoC,GAAE,UAAKf,EAAMgB,IAAX,aAA2BrC,UAAU,YAA7C,+BAKJ,cAAC,IAAD,CAAOkC,KAAI,UAAKb,EAAMa,KAAX,aAAX,SACI,cAAC,EAAD,SAdL","file":"static/js/5.4c585519.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__8p-O3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__1C1m2\",\"loading\":\"NewCommentForm_loading__22LaF\",\"control\":\"NewCommentForm_control__2hki5\",\"actions\":\"NewCommentForm_actions__1Cb9p\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__TLsCs\"};","import { useRef } from 'react';\n\nimport classes from './NewCommentForm.module.css';\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor='comment'>Your Comment</label>\n        <textarea id='comment' rows='5' ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className='btn'>Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import { useState } from 'react';\n\nimport classes from './Comments.module.css';\nimport NewCommentForm from './NewCommentForm';\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n  \n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className='btn' onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && <NewCommentForm />}\n      <p>Comments...</p>\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React , {useEffect} from 'react';\r\nimport { useParams, Route , Link, useRouteMatch } from 'react-router-dom';\r\nimport Comments from '../components/comments/Comments';\r\nimport HighlightedQuote from '../components/quotes/HighlightedQuote';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getSingleQuote } from '../lib/api';\r\nimport LoadingSpinner from './../components/UI/LoadingSpinner';\r\n\r\nfunction QuoteDetail() {\r\n\r\n  const match = useRouteMatch();\r\n  const params = useParams();  \r\n  const {quoteId} = params;\r\n\r\n  const  {sendRequest,status,data:loadedQuotes , error} = useHttp(getSingleQuote,true);\r\n\r\n  useEffect(() => {\r\n    sendRequest(quoteId);\r\n  },[sendRequest , quoteId]);\r\n\r\n  if(status==='pending'){\r\n    return (\r\n      <div className='centered'>         \r\n           <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error){\r\n    return <p className='centered focused'> {error }</p>\r\n  }\r\n\r\n  if(!loadedQuotes.text){\r\n    return <p>No Quote Found</p>\r\n  }\r\n\r\n  return (\r\n    <div>\r\n            <HighlightedQuote text={loadedQuotes.text} author={loadedQuotes.author}/>\r\n            <Route path={`${match.path}/`} exact>\r\n              <div className=\"centered\">\r\n                <Link to={`${match.url}/comments`} className='btn--flat'>\r\n                  Load Comments\r\n                </Link>\r\n            </div>\r\n            </Route>\r\n            <Route path={`${match.path}/comments`}>\r\n                <Comments />\r\n            </Route>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default QuoteDetail"],"sourceRoot":""}