{"version":3,"sources":["components/UI/Card.module.css","components/quotes/QuoteForm.module.css","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuotes.js"],"names":["module","exports","Card","props","className","classes","card","children","QuoteForm","authorInputRef","useRef","textInputRef","useState","isEntered","setIsEntered","when","message","location","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","value","enteredText","onAddQuote","author","text","isLoading","loading","LoadingSpinner","control","htmlFor","type","id","ref","rows","actions","onClick","NewQuotes","useHttp","addQuote","sendRequest","status","history","useHistory","useEffect","push","quoteData"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,qB,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,2BAA2B,QAAU,2BAA2B,QAAU,6B,yFCKtHC,EAJF,SAACC,GACZ,OAAO,qBAAKC,UAAWC,IAAQC,KAAxB,SAA+BH,EAAMI,Y,yBCwD/BC,EApDG,SAACL,GACjB,IAAMM,EAAiBC,mBACjBC,EAAeD,mBACrB,EAAkCE,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAqBA,OACE,eAAC,WAAD,WACA,cAAC,IAAD,CAAQC,KAAMF,EAAWG,QAAS,SAACC,GAAD,MAAa,yEAC/C,cAAC,EAAD,UACE,uBAAMC,QAbe,WACvBJ,GAAa,IAYsBV,UAAWC,IAAQc,KAAMC,SAtB9D,SAA2BC,GACzBA,EAAMC,iBACN,IAAMC,EAAgBd,EAAee,QAAQC,MACvCC,EAAcf,EAAaa,QAAQC,MAEzCtB,EAAMwB,WAAW,CAAEC,OAAQL,EAAeM,KAAMH,KAiB9C,UACGvB,EAAM2B,WACL,qBAAK1B,UAAWC,IAAQ0B,QAAxB,SACE,cAACC,EAAA,EAAD,MAIJ,sBAAK5B,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,SAAf,oBACA,uBAAOC,KAAK,OAAOC,GAAG,SAASC,IAAK5B,OAEtC,sBAAKL,UAAWC,IAAQ4B,QAAxB,UACE,uBAAOC,QAAQ,OAAf,kBACA,0BAAUE,GAAG,OAAOE,KAAK,IAAID,IAAK1B,OAEpC,qBAAKP,UAAWC,IAAQkC,QAAxB,SACE,wBAAQnC,UAAU,MAAMoC,QAzBF,WAC5B1B,GAAa,IAwBP,kC,gBCxBK2B,UArBf,WACE,MAA8BC,YAAQC,KAA9BC,EAAR,EAAQA,YAAYC,EAApB,EAAoBA,OACdC,EAAUC,cAYhB,OAVAC,qBAAU,WACI,cAATH,GACDC,EAAQG,KAAK,aAEf,CAACJ,EAAOC,IAOR,6CACE,cAAC,EAAD,CAAWhB,UAAoB,YAATe,EAAoBlB,WAN5B,SAACuB,GACjBN,EAAYM","file":"static/js/6.6746eb1e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1r1l-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3-NZG\",\"loading\":\"QuoteForm_loading__3pMrd\",\"control\":\"QuoteForm_control__1nojr\",\"actions\":\"QuoteForm_actions__2kH9y\"};","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { useRef, useState , Fragment } from 'react';\n\nimport Card from '../UI/Card';\nimport LoadingSpinner from '../UI/LoadingSpinner';\nimport classes from './QuoteForm.module.css';\nimport { Prompt } from 'react-router-dom';\n\nconst QuoteForm = (props) => {\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const [isEntered, setIsEntered] = useState(false);\n\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n    // optional: Could validate here\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n    \n  }\n\n  const formFocusHandler = () => {\n    setIsEntered(true);\n  }\n\n  const finishEnteringHandler = () => {\n    setIsEntered(false);\n  }\n  \n\n  return (\n    <Fragment>\n    <Prompt when={isEntered} message={(location)=> 'Are you sure you want to leave ? All your entered data will be lost'}/>\n    <Card>\n      <form onFocus={formFocusHandler} className={classes.form} onSubmit={submitFormHandler}>\n        {props.isLoading && (\n          <div className={classes.loading}>\n            <LoadingSpinner />\n          </div>\n        )}\n\n        <div className={classes.control}>\n          <label htmlFor='author'>Author</label>\n          <input type='text' id='author' ref={authorInputRef} />\n        </div>\n        <div className={classes.control}>\n          <label htmlFor='text'>Text</label>\n          <textarea id='text' rows='5' ref={textInputRef}></textarea>\n        </div>\n        <div className={classes.actions}>\n          <button className='btn' onClick={finishEnteringHandler}>Add Quote</button>\n        </div>\n      </form>\n    </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import React , {useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport QuoteForm from '../components/quotes/QuoteForm';\r\nimport useHttp from '../hooks/use-http';\r\nimport { addQuote } from '../lib/api';\r\n\r\nfunction NewQuotes() {\r\n  const  {sendRequest,status} = useHttp(addQuote);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if(status==='completed'){\r\n      history.push(\"/quotes\");\r\n    }\r\n  },[status,history]);\r\n\r\n  const submitForm =(quoteData) => {\r\n    sendRequest(quoteData);\r\n  }\r\n\r\n  return (\r\n    <div>New Quotes\r\n      <QuoteForm isLoading={status==='pending'} onAddQuote={submitForm}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewQuotes"],"sourceRoot":""}