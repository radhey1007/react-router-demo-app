{"version":3,"sources":["components/quotes/QuoteItem.module.css","components/quotes/QuoteList.module.css","components/quotes/NoQuotesFound.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","pages/AllQuotes.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","url","URL","document","isSortAscending","encodeURI","searchParams","get","quotes","ascending","sort","quoteA","quoteB","sortingQuotes","sorting","onClick","push","pathname","search","list","map","quote","NoQuotesFound","AllQuotes","useHttp","getAllQuotes","getQuotes","sendRequest","status","loadedQuotes","data","error","useEffect","LoadingSpinner","length"],"mappings":"sHACAA,EAAOC,QAAU,CAAC,KAAO,0B,mBCAzBD,EAAOC,QAAU,CAAC,KAAO,wBAAwB,QAAU,6B,mBCA3DD,EAAOC,QAAU,CAAC,SAAW,kC,wFCmBdC,EAhBG,SAACC,GACjB,OACE,qBAAIC,UAAWC,IAAQC,KAAvB,UACE,mCACE,qCACE,4BAAIH,EAAMI,SAEZ,qCAAaJ,EAAMK,YAEtB,cAAC,IAAD,CAAMC,GAAE,kBAAaN,EAAMO,IAAMN,UAAU,MAA3C,iC,iBC0CUO,EAvCG,SAACR,GACjB,IAAMS,EAAUC,cACVC,EAAWC,cACXC,EAAM,IAAIC,IAAIC,SAASD,KAEvBE,EAAkC,QADpBC,UAAUJ,EAAIK,aAAaC,IAAI,SAG7CC,EAjBc,SAACA,EAAQC,GAC3B,OAAOD,EAAOE,MAAK,SAACC,EAAOC,GACvB,OAAGH,EACME,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAI,EAE5BgB,EAAOhB,GAAKiB,EAAOjB,GAAK,GAAI,KAY5BkB,CAAczB,EAAMoB,OAAQJ,GAa3C,OACE,eAAC,WAAD,WACE,qBAAKf,UAAWC,IAAQwB,QAAxB,SACE,yBAAQC,QAde,WAC3BlB,EAAQmB,KAAK,CACXC,SAASlB,EAASkB,SAClBC,OAAO,SAAD,OAAWd,EAAkB,OAAQ,UAWzC,kBAA6CA,EAAkB,aAAc,iBAE/E,oBAAIf,UAAWC,IAAQ6B,KAAvB,SACGX,EAAOY,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,CAEE1B,GAAI0B,EAAM1B,GACVF,OAAQ4B,EAAM5B,OACdD,KAAM6B,EAAM7B,MAHP6B,EAAM1B,a,wBC9BR2B,G,MAXO,WACpB,OACE,sBAAKjC,UAAU,WAAf,UACE,oDACA,cAAC,IAAD,CAAMA,UAAU,MAAMK,GAAG,aAAzB,8BCiCS6B,UAhCf,WACE,MAAkEC,YAAQC,KAAa,GAAnEC,EAApB,EAAQC,YAAsBC,EAA9B,EAA8BA,OAAYC,EAA1C,EAAqCC,KAAoBC,EAAzD,EAAyDA,MAMzD,OAJAC,qBAAU,WACRN,MACA,CAACA,IAES,YAATE,EAEC,qBAAKvC,UAAU,WAAf,SACK,cAAC4C,EAAA,EAAD,MAKNF,EACM,oBAAG1C,UAAU,mBAAb,cAAkC0C,KAI7B,cAAXH,GAA4BC,GAAqC,GAArBA,EAAaK,OAM1D,8CACE,cAAC,EAAD,CAAW1B,OAAQqB,OANd,cAAC,EAAD","file":"static/js/4.9e372c35.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__9HAOG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__2afcH\",\"sorting\":\"QuoteList_sorting__23rMy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__2kOWo\"};","import classes from './QuoteItem.module.css';\nimport { Link } from 'react-router-dom';\n\n\nconst QuoteItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n     <Link to={`/quotes/${props.id}`} className='btn'>\n        View Fullscreen      \n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\n\nimport QuoteItem from './QuoteItem';\nimport classes from './QuoteList.module.css';\n\nconst sortingQuotes = (quotes, ascending) => {\n    return quotes.sort((quoteA,quoteB)=> {\n        if(ascending){\n          return quoteA.id > quoteB.id ? 1: -1;\n        } else {\n          return quoteA.id < quoteB.id ? 1: -1;\n        } \n    });   \n  }\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const url = new URL(document.URL);\n  const queryParams = encodeURI(url.searchParams.get(\"sort\"));\n  const isSortAscending = queryParams === 'asc';\n\n  const quotes = sortingQuotes(props.quotes, isSortAscending);\n\n  const changeSortingHandler = () => {\n    history.push({\n      pathname:location.pathname,\n      search:`?sort=${(isSortAscending ? 'desc': 'asc')}`\n    });\n    // or method\n    // history.push('/quotes?sort=' + (isSortAscending ? 'desc': 'asc'));\n  }\n\n  \n\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>Sort {isSortAscending ? 'Descending': 'Ascending'}</button>\n      </div>\n      <ul className={classes.list}>\n        {quotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import classes from './NoQuotesFound.module.css';\nimport {Link} from 'react-router-dom';\n\nconst NoQuotesFound = () => {\n  return (\n    <div className='centered'>\n      <p>No quotes found!   </p>     \n      <Link className='btn' to='/new-quote'>\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import React , {useEffect} from 'react';\r\nimport QuoteList from './../components/quotes/QuoteList';\r\nimport useHttp from '../hooks/use-http';\r\nimport { getAllQuotes } from '../lib/api';\r\nimport LoadingSpinner from './../components/UI/LoadingSpinner';\r\nimport NoQuotesFound from './../components/quotes/NoQuotesFound';\r\n\r\n\r\nfunction AllQuotes() {\r\n  const  {sendRequest:getQuotes,status,data:loadedQuotes , error} = useHttp(getAllQuotes,true);\r\n\r\n  useEffect(() => {\r\n    getQuotes();\r\n  },[getQuotes]);\r\n\r\n  if(status==='pending'){\r\n    return (\r\n      <div className='centered'>         \r\n           <LoadingSpinner />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  if(error){\r\n    return <p className='centered focused'> {error }</p>\r\n  }\r\n\r\n\r\n  if(status === 'completed' && (!loadedQuotes || loadedQuotes.length==0)){  \r\n    return <NoQuotesFound />\r\n  }\r\n  \r\n\r\n  return (\r\n    <div> All Quotes\r\n      <QuoteList quotes={loadedQuotes}/>      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AllQuotes"],"sourceRoot":""}